<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="java.lang.Number"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.springboot.main.repository.ProductRepository"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="javax.transaction.Transactional"/>
<fullyQualifiedTypeName name="com.springboot.main.pojo.Product"/>
<fullyQualifiedTypeName name="com.springboot.main.dao.ProductDAO"/>
<fullyQualifiedTypeName name="com.springboot.main.entity.ProductEntity"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.ui.Model"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.context.ApplicationContext"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Min"/>
<fullyQualifiedTypeName name="javax.validation.Valid"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
<fullyQualifiedTypeName name="java.lang.Thread"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.Cacheable"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest"/>
<fullyQualifiedTypeName name="org.junit.Test"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
<fullyQualifiedTypeName name="com.springboot.main.service.ProductService"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.test.web.servlet.request.MockMvcRequestBuilders"/>
<fullyQualifiedTypeName name="org.mockito.ArgumentMatcher"/>
<fullyQualifiedTypeName name="org.mockito.Matchers"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="org.springframework.test.web.servlet.MvcResult"/>
<fullyQualifiedTypeName name="org.mockito.Mockito"/>
<fullyQualifiedTypeName name="org.junit.runner.RunWith"/>
<fullyQualifiedTypeName name="org.springframework.test.context.junit4.SpringRunner"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest.WebEnvironment"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"/>
<fullyQualifiedTypeName name="org.springframework.test.context.TestPropertySource"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
<fullyQualifiedTypeName name="com.springboot.main.SpringBootMain"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="com.spring.microservices.main.MainEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
